class Solution {
public:
    int level(TreeNode*root){
            if(root==NULL) return 0;
            return 1+std::max(level(root->left),level(root->right));
        }

    void nthlevel(TreeNode*root,int curr,int tar,std::vector<int> &v){
        if(root==NULL) return;
        if(curr==tar){
            v[curr]=root->val;
            return;
        }
        nthlevel(root->left,curr+1,tar,v);
        nthlevel(root->right,curr+1,tar,v);
    }
    void order(TreeNode*root,std::vector<int> &v){
        int n=level(root);
        for(int i=0;i<n;i++){
        
            nthlevel(root,0,i,v);
    
        }
    }
    void preorder(TreeNode*root,std::vector<int> &ans,int level){
        if(root==NULL) return;
        ans[level]=root->val;
        preorder(root->left,ans,level+1);
        preorder(root->right,ans,level+1);
    }
    vector<int> rightSideView(TreeNode* root) {
        std::vector<int> v(level(root),0);
        preorder(root,v,0);
        return v;
    }
};
