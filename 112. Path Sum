/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode*root,bool &a,int tar){
        if(root==NULL) return;
        
        if(root->left==NULL && root->right==NULL){
            if(root->val==tar){
                a=true;
            }
        }
        helper(root->left,a,tar-(root->val));
        helper(root->right,a,tar-(root->val));
        
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        std::vector<std::vector<int>> ans;
        std::vector<int> v;
        bool a=false;
        helper(root,a,targetSum);
        return a;
    }
};
