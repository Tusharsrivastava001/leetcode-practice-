class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m=nums1.size();
        int n=nums2.size();
        std::vector<int> v(m+n);

        int i=0;
        int k=0;
        int j=0;
        while(i<m && j<n){
            if(nums1[i]<nums2[j]){
                v[k++]=nums1[i++];
            }
            else{
                v[k++]=nums2[j++];
            }
        }
        while(i<m){
            v[k++]=nums1[i++];
        }
        while(j<n){
            v[k++]=nums2[j++];
        }
        int size=v.size();
        double median;
        if(size%2==0){
            int w=size/2;
            median=(v[w]+v[w-1])/2.0;
        }
        else{
            int w=size/2;
            median=(v[w]);
        }
        return median;
    }
};
