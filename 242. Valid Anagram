class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.length()!=t.length()) return false;
        // std::sort(s.begin(),s.end());
        // std::sort(t.begin(),t.end());
        // if(s==t) return true;
        // else{
        //     return false;
        // }

        unordered_map<char,int> m1;
        unordered_map<char,int> m2;

        //now fill the elements in the array 
        for(int i=0;i<s.size();i++){
            m1[s[i]]++;
        }
        

       for(int i=0;i<t.length();i++){
        char ch=t[i];
        if(m1.find(ch)!=m1.end()){
            m1[ch]--;
            if(m1[ch]==0) m1.erase(ch);
        }
        else{
            return false;
        }
       } 

       if(m1.size()>0) return false;
       return true;   
    }
};
